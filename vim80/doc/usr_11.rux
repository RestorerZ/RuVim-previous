*usr_11.txt*    для Vim version 8.0.                Редакция от 23 июля 2010

                  РУКОВОДСТВО ПОЛЬЗОВАТЕЛЯ ПО РЕДАКТОРУ VIM
                              автор Брам Муленар

                         Восстановление после аварии


Что делать, если компьютер "завис" именно в тот момент, когда было протрачено
несколько часов на редактирование того или иного документа?  Без паники,
только без паники.  В процессе редактирования программой Vim сохраненяется
достаточно информации для того, чтобы восстановить большую часть из
проделанной работы.  Эта глава прсвящена рассказу о том, как восстановить эту
информацию и объясняются принципы использование файла подкачки.

|11.1|  Общие принципы восстановления данных
|11.2|  Местонахождение файла подкачки
|11.3|  Определение причин сбоев
|11.4|  Дополнительные материалы

 Следующая глава: |usr_12.txt|  Интересные приёмы работы
Предыдущая глава: |usr_10.txt|  Внесение серьёзных изменений
      Содержание: |usr_toc.txt|

==============================================================================
*11.1*  Общие принципы восстановления данных

В большинстве случаев восстановление файлов является довольно простой
операцией, если известно с каким файлом велась работа в момент аварии, при
условии, что диск всё ещё функционирует.  Для этого запустите редактор Vim,
указав в командной строке ключ "-r" и указав название файла, который требуется
восстановить.  Пример.
>
        vim -r help.txt
<
Редактором Vim будут предприняты действия по считыванию содержимого файла
подкачки, который используется для хранения редактируемого текста, а также
попытки считать сохранившиеся фрагменты оригинального файла.  Если всё в
порядке, то будет выведено примерно такое сообщение:

        Используется файл подкачки ".help.txt.swp" ~
        Исходный файл "~/vim/runtime/doc/help.txt" ~
        Восстановление завершено. Следует удостовериться, что всё в порядке ~
        (Сохраните файл с другим названием и сравните его с оригинальным ~
        файлом программой diff). После этого удалите файл подкачки. ~

Для подстраховки сохраните этот файл с другим названием
>
        :write help.txt.recovered
<
и сравните с оригинальным файлом, чтобы убедиться, что всё действительно в
порядке.  Для этой цели очень полезно использовать vimdiff (см. |08.7|).
Пример.
>
        :write help.txt.recovered
        :edit #
        :diffsp help.txt
<
При сравнении файлов обращайте внимание на следующие моменты: содержит ли
оригинальный файл более свежую версию данных (это возможно, если авария
произошла сразу после того, как файл был сохранён), имеются ли пропущены
строки в файле (возможно, что редактор не смог их восстановить).
   Хотя это бывает достаточно редко, редактором Vim могут быть выданы
предупреждения в процессе восстановления. Прочитайте их внимательно.

Если в процессе восстановления удалось получить содержание, которое
полностью соответствует тому, что в оригинальном файле, то будет выведено
примерно такое сообщение:

        Используется файл подкачки ".help.txt.swp" ~
        Оригинальный файл: "~/vim/runtime/doc/help.txt" ~
        Восстановление завершено. Содержимое буфера соответствует ~
        содержимому файла. ~
        Теперь можете удалить файл подкачки. ~

Данное сообщение выводится, как правило, в том случае если все изменения были
восстановлены или файл был сохранён после внесения в него изменений.  Можете
спокойно удалять файл подкачки.

Небольшое количество изменений возможно всё же не будет восстановлено, это
нормально.  В редакторе Vim изменения сохраняются на диск примерно на четвёртой
секунде после прекращения набора текста или после набора примерно двухсот
символов.  Точная настройка этих значений содержится в параметрах 'updatetime'
и 'updatecount'.  Если в редакторе Vim не было возможности сохранить изменения
в момент системного сбоя, то изменения, произошедшие после последнего сброса
информации на диск, будут потеряны.

Если редактировался безымянный файл, то укажите в качестве аргумента пустую
строку: >

        vim -r ""

Обратите внимание, что должен быть указан правильный каталог, иначе редактору
Vim не удасться определить файл подкачки.

==============================================================================
*11.2*  Местонахождение файла подкачки

Файлы подкачки, используемые редактором Vim, могут располагаться в нескольких
местах.  Как правило, файл подкачки хранится в том же каталоге, что и
редактируемый файл, чтобы его найти, выполните переход в каталог с
редактируемым файлом и введите команду
>
        vim -r
<
В редакторе Vim будет выведен перечень всех файлов подкачки, которые удалось
обнаружить, при этом редактором Vim также будут проверены другие каталоги, где
могут находиться файлы подкачки для этого файла, но не ждите, что он будет
искать их по всему диску.  Вывод может выглядеть примерно так:

        Обнаружены файлы подкачки. ~
           В текущем каталоге: ~
        1.    .main.c.swp ~
                  владелец: mool    дата: Tue May 29 21:00:25 2001 ~
            название файла: ~mool/vim/vim6/src/main.c ~
                   изменён: ДА ~
          имя пользователя: mool   название хоста: masaka.moolenaar.net ~
             процесс (PID): 12525 ~
           В каталоге ~/tmp: ~
              -- нет -- ~
           В каталоге /var/tmp: ~
              -- нет -- ~
           В каталоге /tmp: ~
              -- нет -- ~

Если обнаружено несколько файлов подкачки, похожих на искомый, то будет
выведен их перечень и запрос на указание номера файла подкачки, который
следует использовать для восстановления.  Внимательно посмотрите на даты
создания, чтобы принять правильное решение.
   Если не знаете, какой файл подкачки следует использовать, то попробуйте их
один за другим и проверьте что получается в итоге.


ИСПОЛЬЗОВАНИЕ ОПРЕДЕЛЁННОГО ФАЙЛА ПОДКАЧКИ

Если знаете какой файл подкачки следует использовать, то при восстановлении
можно указать его название.  Редактором Vim будет выполнена процедура
определения файла, который подлежит восстановлению, по информации содержащейся
в файле подкачки.

Пример. >
        vim -r .help.txt.swo

Это может быть полезным, если файл подкачки находится в другом каталоге.
Редактор определяет файлы подкачки, используя следующий шаблон: *.s[uvw][a-z].

Если не помогает и это, то посмотрите, какие названия для файлов подкачки
указаны в параметрах программы Vim, и переименуйте файлы соответствующим
образом.  Проверьте также значение параметра 'directory', чтобы узнать, где
могут располагаться файлы подкачки, используемы редактором Vim.

        Примечание.
        Редактором Vim выполняется поиск файла подкачки посредством просмотра
        каталогов, указанных в значении параметра 'dir' и соответствующих
        шаблону "filename.sw?".  Если подстановочные символы работают не так,
        как ожидается с расширениями файлов (проверьте значение параметра
        'shell'), то он пытается найти файл "filename.swp".  Если и это
        оказывается безуспешным, то потребуется вручную указать название файла
        подкачки, который следует использовать.

==============================================================================
*11.3*  Определение причин сбоев                      *ATTENTION* *E325* *Внимание*

Редакторм Vim предпринимаются попытки по предупреждению от необдуманых
действий.  Представьте, что открывая файл на редактирование и ожидая увидеть
его содержимое на экране, вместо этого, в редакторе Vim выводится длинное
сообщение:

        E325. Внимание! ~
        Обнаружен файл подкачки с названием ".main.c.swp" ~
                  Владелец: mool ~
                      Дата: Tue May 29 21:09:28 2001 ~
            Название файла: ~mool/vim/vim6/src/main.c ~
                   Изменён: нет ~
          Имя пользователя: mool   имя хоста: masaka.moolenaar.net ~
             Процесс (PID): 12559 (все ещё запущен) ~
        При открытии файла "main.c" ~
                      Дата: Tue May 29 19:46:12 2001 ~
 ~
        (1) Этот файл может редактироваться в данный момент в другой программе.~
            Будьте внимательны, чтобы в процессе изменений у вас не оказалось ~
            два различных варианта одного и того же файла. ~
            Сейчас вы можете выйти из Vim или продолжить с осторожностью. ~
 ~
        (2) Предыдущая сессия редактирования завершилась некорректно. ~
            В этом случае используйте ":recover" или "vim -r main.c" ~
            для восстановления изменений (см. ":help recovery"). ~
            После этого удалите файл подкачки ".main.c.swp", ~
            чтобы избежать этого сообщения при дальнейшей работе. ~

Это сообщение возникает потому, что перед тем, как начать редактировать файл,
программой Vim проверяется существование файла подкачки для этого файла.  Если
таковой уже существует, то наверняка что-то происходит не так.  Возможны две
причины:

1. Файл действительно редактируется в данный момент в программе Vim запущенной
   параллельно.  Обратите внимание на строку сообщения "Процесс (PID):", она
   может выглядеть так:

                Процесс (PID): 12559 (все ещё запущен) ~

   Текст "(все ещё запущен)" указывает на то, что процесс, в котором
   происходит редактирование файла, выполняется на том же компьютере.  Если
   работа выполняется не в UNIX-подобной системе, то это уточнение может и не
   появиться в данном случае.  Впрочем как и при редактировании файла по сети
   этой подсказки может и не быть, так как процесс может быть запущен на
   другой ЭВМ.  В данных ситуациях придётся самостоятельно разбираться в
   причинах.
      Если в другом экземпляре программы Vim в данный момент редактируется
   файл, то продолжение правки может привести к тому, что окажется два
   варианта одного и того же файла.  Тот вариант, который будет записана на
   диск последним, перепишет ранее сохранённый вариант и возможна потеря
   данных.  Лучшим решением будет завершение работы в редактора.

2. Файл подкачки мог остаться в результате предыдущих сбоев программы Vim или
   системы.  Обратите внимание на даты, указанные в сообщении.  Если дата
   файла подкачки более свежая, чем дата редактируемого файла и присутствует
   такая строка,

                Изменён: ДА ~

   ,то вполне вероятно, что столкнились с аварийно завершённой сессией
   редактирования, которую стоит восстановить.
      Если дата файла более свежая, чем дата файла подкачки, то наиболее
   вероятно, что файл был изменён после аварии.  Вполне возможно, что этот
   файл уже восстановлен, но файл подкачки не был удалён.  Возможно также, что
   файл был сохранён перед аварией, но после момента последней записи в файл
   подкачки --- тогда можно считать, что это удача, т. к.  старый файл
   подкачки вообще не нужен.  Редактор Vim предупредит об этом при помощи
   дополнительной строки

                более СВЕЖИЙ, чем файл подкачки! ~

НЕЧИТАЕМЫЙ ФАЙЛ ПОДКАЧКИ

Иногда ниже строки с названием файла подкачки добавляется строка

        [не может быть прочитан] ~

Это может быть как хорошо, так и плохо, в зависимости от обстоятельств.

Если предыдущий сеанс редактирования был аварийно завершён без внесения
изменений в файл, то это хорошо.  В таком случае просмотр свойств файла
подкачки покажет, что его размер составляет 0 байт.  Можно просто удалить его
и продолжить работу.

Немного хуже обстоят дела, если отсутствуют права на чтение файла подкачки.
Остаётся только просмотр файла в режиме "только для чтения" или завершить
работу.  В многопользовательской системе, если в последний раз изменения в
файл вносили вы же, но под другой учётной записью, то можно избавиться от
"ошибки чтения", если начнать редактировать файл после входа в систему под
соответствующей учётной записью.  В конце концов, можно поговорить с
человеком, который в последний раз выполнял редактирование этого файла (или
продолжает его редактирование).

Совсем плохи дела, когда возникает физическая ошибка чтения с диска, на
котором размещён файл подкачки.  К счастью, это почти никогда не случается.
Попробуйте сначала открыть файл в режиме "только для чтения", если это
удастся, то проверьте, какие изменения могли быть утрачены.  Возможно, что в
этом случае потребуется заново внести все потерянные изменения в файле вручную.


ЧТО ДЕЛАТЬ                                             *swap-exists-choices*
                                              *файл_подкачки-выбор_действий*

Если в используемой версии редактора Vim поддерживается вывод диалоговых окон,
то будет отображён соответствующий запрос с шестью вариантами действий.

  Обнаружен файл подкачки ".main.c.swp"!~
Открыть для чтения, Редактировать, Восстановить, Выход, Прервать, Удалить. ~

Предложенные варианты означают следующее:

1. Открыть файл только для чтения.  Используйте этот вариант, если хотите
   просмотреть файл без необходимости его восстановления.  Данным вариантом
   можно пользоваться тогда, когда известно, что кто-то ещё редактирует этот
   файл, и просто необходимо взглянуть на него не внося никаких изменений.

2. Редактировать файл, несмотря на предупреждение.  Используйте этот вариант с
   осторожностью!  Если файл редактируется в уже запущенной копии редактора
   Vim, то в итоге окажется, что у файла две версии.  В редакторе Vim будет
   выведено соответствующее предупреждение об этом, но лучше перестраховаться.

3. Восстановить файл из файла подкачки.  Используйте этот вариант в том случае,
   когда точно знаете, что в файле подкачке содержатся изменения, которые
   необходимо восстановить.

4. Выход.  При выборе этого варианта прекращается редактирования файла.
   Используйте этот вариант, если файл редактируется в уже запущенной копии
   редактора Vim.
      Если редактор был только что запущен, то он прекратит свою работу.  Если
   редактор Vim запущен с нескольким файлами открываемыми в различных
   окнах, то он прекратит работу только в том случае если файл подкачки
   обнаружен для первого файла в списке.  Если для загрузки файла использована
   команда ":edit", то файл не будет открыт и будет продолжено редактирование
   предыдущего файла.

5. Прервать.  То же, что и Выход (4), но также прекращается выполнение всех
   последующих команд.  Может пригодиться при загрузке сценария, который
   используется для редактирования нескольких файлов, например файла сеанса с
   несколькими окнами.

6. Удалить файл подкачки.  Используйте этот вариант, если уверены, что больше
   в нём не нуждаетесь.  Например, в тех случаях, когда в файле подкачки нет
   актуальных изменений, или если сам файл более свежий, чем файл подкачки.
      В UNIX-подобных системах этот вариант предоставляется только в тех
   случаях, когда процесс, создавший файл подкачки, не запущен.

Если этот диалог не был отображён (данная версия программы Vim не поддерживает
эту возможность), то потребуется провести необходимые операции вручную.  Для
восстановления файла используйте команду
>
        :recover
<
Редактором Vim не всегда может быть определено существование файла подкачки
для данного файла, например в тех случаях, когда другая сессия редактирования
помещает файлы подкачки в иной каталог, или когда маршрут к файлу указываетя
иначе при редактировании с разных компьютеров.  По этим причинам программа Vim
не сможет выдать соответсвующего предупреждение.

Если совсем не хотите видеть это сообщение, то добавьте флаг 'A' в парметр
'shortmess', хотя это было бы очень странным решением.

Информацию о работе с файлом подкачки в режиме шифрования см. в |:recover-crypt|.

==============================================================================
*11.4*  Дополнительные материалы

|файл_подкачки|   Подробная информация о файлах подкачки.
|:preserve|       Запись изменений в файл подкачки вручную.
|:swapname|       Просмотр названия файла подкачки для текущего файла.
'updatecount'   Установка количества нажатий на клавиши, после которого
                изменения сбрасываются в файл подкачки.
'updatetime'    Установка времени простоя, после которого изменения
                сбрасываются в файл подкачки.
'swapsync'      Установка синхронизации диска при сбросе изменений в
                файл подкачки.
'directory'     Список каталогов, в которых могут размещаться файлы подкачки.
'maxmem'        Ограничение на использование памяти при записи текста в
                файл подкачки.
'maxmemtot'     То же, но для всех файлов.

==============================================================================

Следующая глава: |usr_12.txt|  Интересные приёмы работы
Авторские права: см. |авторские_права_на_документацию|

vim:tw=78:ts=8:ft=help:norl:

   *usr_04.txt*    для Vim version 8.0.                 Редакция от 29 авг 2014

                  РУКОВОДСТВО ПОЛЬЗОВАТЕЛЯ ПО РЕДАКТОРУ VIM
                              автор Брам Моленар

                        Основные приёмы правки текстов


В этой главе рассмотрено несколько способов внесения правок в текст
и перемещение частей текста в документе с применением трёх основных методов
редактирования текста: использование команд операций совместно с командами
перемещения курсора, использование визуального режима и применение текстовых
объектов.

|04.1|  Команды операций и команды перемещения
|04.2|  Изменение текста
|04.3|  Повторное использование команд
|04.4|  Визуальный режим
|04.5|  Перемещение текста
|04.6|  Копирование текста
|04.7|  Использование системного буфера обмена
|04.8|  Текстовые объекты
|04.9|  Режим замены
|04.10| Заключение

 Следующая глава: |usr_05.txt|  Настройка редактора
Предыдущая глава: |usr_03.txt|  Навигация по документу
      Содержание: |usr_toc.txt|

==============================================================================
*04.1*  Команды операций и команды перемещения

В главе 2 было рассмотрено применение команды "x" для удаление одиночных
символов, а использование совместно с ней счётчика позволяло удалять несколько
символов.  Например, по команде "4x" будет выполнено удаление четырёх символов.
   По команде "dw" выполняется удаление целого слова.  Как уже говорилось,
команда "w" используется для перемещения курсора на одно слово.  Фактически
совместно с командой операции "d" может быть использована любая команда
перемещения курсора, при этом выполняется операция удаления текста от текущей
позиции курсора до того места к которому переместится курсор по команде
перемещения.
   Так по команде "3w" курсор перемещается на три слова, а по команде d3w
выполняется операция удаления трёх слов.

        Разрешается провоз пяти килограммов кота (справка с таможни) ~
                           ----------------------> 
                                     d3w
                    
        Разрешается провоз (справка с таможни) ~
   
Удаление символов выполняется до позиции, в которой оказывается курсор после
перемещения.  Так происходит потому, что предполагается что, скорее всего, не
требуется удаление первого символа слова, на который переместится курсор.
Однако, если используется команда "e" для перемещения к концу слова, то
алгоритм удаления настроен таким образом, что происходит удаление последнего
символа слова на который перемещается курсор:

        Разрешается провоз пяти килограммов кота (справка с таможни) ~
                          ---------------->
                                d2e

        Разрешается провоз кота (справка с таможни) ~
        

Включается или нет символ под курсором в контекст операции, зависит от команды
перемещения.  В документации по редактору Vim команды перемещения называются
"исключающими", если символ под курсором не включается в контекст операции,
и "включающими", если символ включается в контекст.

По команде "$" выполняется перемещение курсора к концу строки.  И,
соответственно, по команде "d$" выполняется операция удаления текста, начиная
с позиции курсора и до конца строки.  Это перемещение является включающим,
поэтому последний символ также будет удалён:

        Разрешается провоз пяти килограммов кота (справка с таможни) ~
                                                ------------------->
                                                         d$

        Разрешается провоз пяти килограммов кота ~
                                                        
В приведённых примерах схема работы следующая: операция-перемещение.  Первой
указывается команда операции, например, операция удаления --- "d", затем
указывается команда перемещения, например, "4l" или "w".  Подобным образом
можно выполнять операции с любым текстом над которым перемещается курсор.

==============================================================================
*04.2*  Изменение текста

Ещё одним оператором является команда "c" (change, изменить).  Она работает
аналогично оператору "d", но после выполнения операции, редактор переключается
в режим вставки.  Например, по команде "cw" выполняется замена слова.  Говоря
точнее, по этой команде будет выполнено удаление слова и переключение
редактора в режим вставки.

        Разрешается провоз пяти килограммов кота ~
                           ----------------->
                            c2wмешка для<Esc>

        Разрешается провоз мешка для кота ~

Команда "c2wмешка для<Esc>" состоит из следующий частей:

        c           Оператор изменения.
        2w          Перемещение на два слова, которые удаляются и редактор
                    переключается в режим вставки.
        мешка для   Вставить этот текст.
        <Esc>       Возврат в Общий режим.

Обратите внимание, что пробел перед словом "кота" не был удалён.  Говорят, что
для каждой проблемы есть решение, которое одновременно простое, элегантное и
неправильное.  То же можно сказать и о примере с командой "cw".  Сам по себе
оператор "c" работает точно так же как и оператор "d", но с одним исключением
--- это команда "cw".  Фактически, в данном случае, он работает как команда
"ce", изменения выполняются до последнего символа слова, на которое
переместился курсор.  Таким образом, пробел после слова не включается в
обработку.  Это исключение из правила существовало ещё в редакторе Vi.  А
поскольку многие люди привыкли к такому поведению, оно сохраняется и в
редакторе Vim.


ПРОЧИЕ КОМАНДЫ ИЗМЕНЕНИЯ ТЕКСТА

Подобно тому как по команде "dd" удаляется целая строка, так и по команде "cc"
изменения вносятся целиком во всю строку.  Но при этом, сохраняется
существующий отступ (начальные пробелы). 

Также как по команде "d$" выполняется удаление текст до конца строки, так
и по команде "c$" изменение текст от курсора до конца строки --- то же самое,
что удалить текст по команде "d$" и затем ввести команду "a" для переключения
редактора в режим вставки и добавления нового текста.


СОКРАЩЁННЫЕ ВАРИАНТЫ КОМАНД

Некоторые команды, относящиеся к разряду оператор-перемещение, употребляются
настолько часто, что им были сопоставлены однобуквенные команды:

        x  используется для  dl  (удаляет символ под курсором)
        X  используется для  dh  (удаляет символ слева от курсора)
        D  используется для  d$  (удаляет от позиции курсора до конца строки)
        C  используется для  c$  (изменение от позиции курсора до конца строки)
        s  используется для  cl  (изменение одиночного символа)
        S  используется для  cc  (изменение всей строки)
        

ГДЕ УКАЗЫВАТЬ СЧЁТЧИК

Как по команде "3dw", так и по команде "d3w" будет выполнено удаление трёх
слов.  Если интереусуют подробности, то на самом деле по первой из приведённых
команд, --- "3dw" --- выполняется удаление по одному слову три раза, по второй
команде, --- "d3w" --- выполняется удаление трёх слов за один раз.  Эти
различия в данном случае не имеют значение --- главное результат.  Но вот что
ещё интереснее, так это то, что в подобных командах можно указывать сразу два
счётчика.  Например, по команде "2d3w" будет удалено по три слова два раза, то
есть всего шесть слов.


ЗАМЕНА ОДНОГО СИМВОЛА

Команда "r" не является оператором.  После данной команды ожидается ввод
символа и производится замена символа под курсором введённым символом.  Того
же эффекта можно добиться при помощи команд "cl" или "s", но основное отличие
заключается в том, что после исполнения команды "r" не требуется нажимать
клавишу <ESC> для возврата в Общий режим из режима вставки.  Пример.

        если где-то нет когн-то, дначит, где-то кто-то есть ~
        rЕ                 rо    rз

        Если где-то нет кого-то, значит, где-то кто-то есть ~
        
Использование счётчика с командой "r" вызывает замену соотствующего количества
символов на один и тот же набранный символ.  Пример.

        Если где-то нет кого-то, значит, где-то кто-то есть ~
                        7rх

        Если где-то нет ххххххх, значит, где-то кто-то есть ~

Для замены символа на символ перевода строки используйте "r<Enter>".  Эта
операция удаляет один символ под курсором и вставляет символ перевода строки.
Указание счётчика в этом случае влияет только на количество удаляемых
символов; по команде "4r<Enter>" заменяется четыре символа на один символ
перевода строки.

==============================================================================
*04.3*  Повторное использование команд 

Команда "." (точка) --- одна из самых простых, и, в то же время, самых мощных
команд в редакторе Vim.  Она повторяет последнее выполненное изменение текста.
   Например, представьте, что редактируется файл HTML и необходимо удалить все
теги <B>.  Это можно выполнить примерно следующим образом, перемещаем курсор
на символ < и удаляем тег <B> командой "df>", затем перемещаем курсор на
символ < парного тега </B> и удаляем его просто введя команду ".".  Как уже
сказано выше, команда "." выполняет последнюю команду изменения, в данном
случае это "df>".  Для удаления всех последующих тегов мы просто устанавливаем
курсор на символ < и используем команду ".".

Пример.               
                              Деньги <B>неудобны</B> лишь тем, что <B>их ~
                            
        f<   найти первый <   ------->
        df>  удалить до >            -->
        f<   найти следующий <         --------->
        .    повторить команду df>              --->
        f<   найти следующий <                     ---------------->
        .    повторить команду df>                                 -->

Команда "." работает для всех команд изменения, кроме команды отмены "u",
повторного выполнения отменённой команды CTRL-r, и команд, которые начинаются
с символа двоеточие (:).

Приведём ещё один пример.  Допустим надо изменить слова "четыре" на слово
"пять" везде, где оно появляется в тексте.  Это можно достаточно быстро
проделать следующей серией команд:

        /четыре<Enter>  найти первое слово "четыре"
        cwпять<Esc>     заменить его на "пять"
        n               найти следующее слово "четыре"
        .               повторить замену слова на "пять"
        n               найти следующее "четыре"
        .               повторить замену
                        и т.д.

==============================================================================
*04.4*  Визуальный режим

Для удаления простых фрагментов текста, команды вида "оператор-перемещение"
работают неплохо, но иногда бывает затруднительно определить, как именно
команда будет перемещаться по тексту при его изменении.  В этом случае на
помощь приходит визуальный режим.

Переключение в визуальный режим осуществляется по команде "v".  В визуальном
режиме курсор перемещается по тексту, к которому требуется применить изменения
--- во время этого процесса необходимый фрагмент текста будет подсвечиваться.
Затем выполняется команда оператора.
   Например, для удаления текста с середины одного слова до середины другого
слова:

                Генерал -- это тот же ефрейтор ~
                      -------------------->
                          veeeelllllld
                      
                Генератор ~

При этом нет необходимости вести учёт сколько же раз надо нажать "l", чтобы
курсор оказался в необходимой позиции.  Сразу видно текст, который будет
удалён при вводе команды "d".

Если в какой-либо момент окажется, что с выделенным фрагментом текста ничего
не надо делать, то просто нажмите клавишу <ESC> для выхода из визуального
режима.


ВЫДЕЛЕНИЕ СТРОК

Если требуется работать с целыми строками, то используйте для переключения в
визуальный режим команду "V" (латинская прописная буква V).  При использовании
этой команды текущая строка будет сразу же выделена.  Перемещения вправо или
влево, не приводят ни к каким изменениям, зато перемещения вверх или вниз
расширяют область выделения на одну строку за раз.
    Например, для выделения трёх строк можно ввести "Vjj":

                          +------------------------+
                          | текст текст текст      |
                       >> | текст текст текст текс | |
     выделенные строки >> | текст текст текст      | | Vjj
                       >> | текст текст            | V
                          | текст текст текст      |
                          +------------------------+


ВЫДЕЛЕНИЕ БЛОКОВ

Если нужно работать над прямоугольной областью текста, то используйте для
переключения в визуальный режим команду CTRL-V.  Визуальные блоки очень
полезны при работе с таблицами.

                имя             Q1      Q2      Q3
                Петя            123     455     234
                Миша            0       90      39
                Саша            392     63      334

Чтобы удалить средний столбец "Q2", подведите курсор к "Q" и нажмите CTRL-V
для переключения в режим визуального блока.  Затем переместите курсор на три
строки вниз, например командой "3j", и вправо к следующему слову, командой
"w".  Поскольку выделение также захватит первый символ последнего столбца,
сдвиньте курсор влево на одну позицию командой "h".  Теперь нажмите "d" и
средний столбец исчезнет.


ПЕРЕХОД К ПРОТИВОПОЛОЖНОЙ СТОРОНЕ ВЫДЕЛЕННОГО

Иногда в процессе выделения текста в визуальном режиме требуется, чтобы курсор
находился с другой стороны выделенной области.  Чтобы переместить курсор к
противоположной стороне выделенной области, используйте команду "o" (other,
другой).  Курсор переместиться к другой стороне выделения и можно будет
поправить границу выделения с этого края выделения.  Повторное нажатие "o"
вернёт курсор к тому краю выделенной области, где он находился до перемещения. 

При блоковом выделении у области выделения имеется четыре угла. Команда "o"
перемещает курсор по диагонали, а "O" (латинская прописная буква O) перемещает
курсор к противоположному углу по горизонтали.

Обратите внимание, что команды "o" и "O" в визуальном режиме работают совсем
не так, как в режиме команд, где они открывают новую строку выше или ниже
строки с курсором.

==============================================================================
*04.5*  Перемещение текста

При удалении текста, например с помощью команд "d" или "x", удалённый текст
сохраняется в памяти.  При помощи команды p (put, поместить) его можно вставить
в любом другом месте документа.
   Попробуем, как это работает.  Прежде всего, удалим целую строку, поместив на
неё курсор и введя команду "dd".  Теперь, переместим курсор туда, где хотелось
бы вставить строку и введём команду "p".  Удалённая строка будет вставлена под
курсором.

        строка          строка        строка ~
        строка 2  dd    строка 3  p   строка 3 
        строка 3                      строка 2 ~

Поскольку была удалена целая строка, команда "p" вставляет строку с текстом
под строкой с курсором.  Если удалить часть строки (например, слово), то
команда "p" вставит его сразу после курсора.

        Из спасибо шапки не сошьёшь ~
           -------->
              dw
              
        Из шапки не сошьёшь ~
           ----->
            whp

        Из шапки спасибо не сошьёшь ~
        

ЕЩЁ О КОМАНДАХ ВСТАВКИ ТЕКСТА

Команда "P" (латинская прописная буква P) также как и команда "p" вставляет
текст, но вставляет его перед курсором.  Если удалить строку командой "dd", то
"P" вставит строку над строкой с курсором.  После удаления слова при помощи
команды "dw", "P" вставит его сразу перед курсором.

Можно повторять вставку текста столько раз, сколько требуется.  При этом будет
использоваться один и тот же текст. 

С командами "p" и "P" можно использовать числовую приставку.  Текст будет
повторяться столько раз, сколько указывает число.  Таким образом, "dd3p"
поместит снизу от курсора три копии удалённой строки.


ПОМЕНЯТЬ МЕСТАМИ ДВА СИМВОЛА

Часто во время набора возникают опечатки, при которых два символа оказываются
переставленными местами.  Редактор Vim позволяет легко исправлять такие ошибки
--- просто подведите курсор к первому ошибочно набранному символу и выполните
команду "xp".  При этом происходит следующее: команда "x" удаляет символ и
помещает его в регистр, а команда "p" вставляет текст после курсора.

        навзание   назание   название ~
          x          p

==============================================================================
*04.6*  Копирование текста

Чтобы скопировать текст из одного места в другое, можно было бы удалить его,
воспользоваться командой "u" для восстановления, и затем вклеить его в другом
месте при помощи команды "p".  Существует более простой способ скопировать
нужный фрагмент текста --- это оператор "y", который копирует текст в |регистр|.
После этого можно пользоваться командой "p" как было описано выше.
   В редакторе Vim эту операцию называют "yanking" (выдёргивание).  Дело в том,
что буква "c" уже используется для оператора изменения, поэтому для операции
копирования придумали другое название, совпадающее по смыслу и соответствующее
выбранной для этой команды клавише [Прим. перевод. Ну, это всё только
английского языка касается].

Поскольку "y" является оператором, то можно использовать такие команды, как
например "yw" для копирования слова. Конечно же, можно употреблять и числовые
приставки. Для того чтобы скопировать два слова, можно использовать "y2w".
Пример.

        let sqr = LongVariable *   ~
                 -------------->
                       y2w

        let sqr = LongVariable * ~
                               p

        let sqr = LongVariable * LongVariable ~

Обратите внимание, что команда "yw" включает пробел после слова. Если это не
устраивает, то пользуйтесь командой "ye".

Команда "yy" копирует всю строку целиком, подобно тому как команда "dd"
удаляет всю строку. Неожиданное поведение заключается в том, что "Y" работает
точно так же, как и "yy", то есть копирует всю строку целиком, в то время как
"D" удаляет текст от курсора до конца строки. Будьте внимательны, для
копирования текста от курсора до конца строки пользуйтесь командой "y$".

        строка текста      yy   строка текста          строка текста
        строка 2                строка 2           p   строка 2
        последняя строка        последняя строка       строка текста
                                                       последняя строка

==============================================================================
*04.7*  Использование системного буфера обмена

При использовании версии редактора Vim с графическим интерфейсом (gvim), в
меню Правка имеется команда Копировать.  Чтобы скопировать текст в системный
буфер обмена сначала выделите его в визуальном режиме, а затем воспользуйтесь
командой Копировать в меню Правка.  Скопированный текст можно вставлять, как и
в самом редакторе Vim, так и в другие программы.

Текст, скопированный в системный буфер обмена в любом приложении, можно
вставлять при помощи команды Вставить меню Правка, как в Общем режиме, так и в
режиме вставки.  В визуальном режиме вставляемый текст будет заменять
выделенный текст.

При использовании команды Вырезать меню Правка, текст будет удалён из файла,
после помещения его в системный буфер обмена.  Если в системе поддерживается
контекстное всплывающее меню, то команды Копировать, Вырезать и Вставить также
доступны и в контекстном меню.  Кроме того, соответствующие кнопки присутствуют
на панели инструментов, если у Gvim включено отображение панель инструментов.

Если не используется версия с графическим интерфейсом, или не нравиться
пользоваться меню, то для выполнения тех же операций можно применять
клавиатурные команды.  Для этого надо воспользоваться обычными командами "y"
и "p", но предварительно набрать "* (двойная кавычка и звёздочка).  Например,
чтобы скопировать в системный буфер обмена текущую строку, используйте
>
        "*yy
<
А для вставки текста из системного буфера используйте
>
        "*p
<
Это работает только в версиях редактора Vim, в которых есть поддержка
системного буфера обмена.  Подробнее об этом читайте в разделе |09.3| и здесь:
|буфер_обмена|.

==============================================================================
*04.8*  Текстовые объекты

Если курсор находится в середине слова, которое требуется удалить, то прежде
чем выполнить команду "dw" придётся переместить курсор в начало этого слова.
Гораздо проще добиться того же эффекта командой "daw".

        молчание - просто хорошо отредактированный ответ ~
                     daw

        молчание - хорошо отредактированный ответ ~
        
Где "d" в "daw" это оператор удаления, а "aw" ("a word", слово) это текстовый
объект.  Таким образом, "daw" означает "удалить слово".  Точнее говоря, пробел
после слова также будет удалён (пробел перед словом "хорошо").

Использование текстовых объектов является третьим способом внесения изменений
в текст, при использовании редактора Vim, в дополнение к уже изученным
"оператору с перемещением" и Визуальному режиму.
   Текстовые объекты очень похожи на операторы с перемещением, но, вместо
совершения операции над фрагментом текста между текущей и последующей
позицией курсора, текстовый объект рассматривается как целое.  Положение
курсора внутри объекта не имеет значения.

Для изменения целого предложения пользуйтесь командой "cis".  Посмотрите на
следующий текст:

        Это лифт, а не всякие там спектроскопы-микроскопы. Лифт есть ~
        мощное средство передвижения, это первое. А также средство ~
        транспорта. Лифт должен быть как самосвал: приехал, вывалил и ~
    
Поместите курсор в начале второго предложения и введите команду "cis":


        Это лифт, а не всякие там спектроскопы-микроскопы.  А также средство ~
        транспорта. Лифт должен быть как самосвал: приехал, вывалил и ~

Курсор будет находиться между пробелами на месте второго предложения. Теперь
вы можете вставить на это место любое другое предложение.
        
Команда "cis" состоит из оператора изменения "c" и текстового объекта "is"
(inner sentence, внутреннее предложение).  Также имеется объект "as" (a
sentence, предложение).  Различие между этими двумя объектами заключается в
том, что "as" включает пробел после предложения, а "is" не включает.  Если бы
нужно было удалить вместе с предложением и пробел после него, то можно было бы
использовать команду "das".  Если нужно на месте старого предложения напечатать
свой текст и сохранить пробел после предложения, то используйте команду "cis".

Текстовые объекты можно использовать и в визуальном режиме.  В этом случае
объект текста будет включён в выделение.  Визуальный режим не будет прерван,
поэтому можно будет применять текстовые объекты несколько раз.  Например,
переключившись в визуальный режим, попробуйте выбрать предложение при помощи
команды "as".  Для включения в выделение новых предложений можно повторять
команду "as" до тех пор, пока не будет выделена вся область, над которой
необходимо провести операцию.

Список текстовых объектов можно найти здесь: |текстовые_объекты|.

==============================================================================
*04.9*  Режим замены

По команде "R" (латинская прописная буква R) происходит переключение редактора
Vim в режим замены.  В этом режиме символы, которые набираются, заменяют
символы, расположенные под курсором.  Так продолжается до тех пор, пока не
будет нажата клавиша <ESC>.
   Приведём пример.

        Однажды в студёную пору ~
                           Rзимнюю<Esc>
        
        Однажды в студёную зимнюю ~

Обратите внимание, что в этом примере команда заменила четыре символа на шесть
других.  По команде "R" строка автоматически расширяется, если заканчиваются
символы для замены.  Текст, набираемый с использованием команды "R", не
переносится на следующую строку.

Между режимами вставки и замены можно переключаться клавишей <INSERT>.

Если в режиме замены воспользоваться клавишей <BACKSPACE>, то старый текст
будет восстанавливается по мере нажатия на клавишу.  Таким образом, эта клавиша
работает вместо команды отмены для последнего набранного символа.

==============================================================================
*04.10* Заключение

Операторы, команды перемещения и текстовые объекты предоставляют возможность
для создания множества комбинаций.  Если знаете, как всё это работает, то
можно использовать N операторов с M командами перемещения для составления N *
M команд!

Перечень доступных операторов находится здесь: |оператор|

Например, для удаления фрагментов текста существует множество способов.  Вот
лишь несколько наиболее употребимых:

x       удалить символ под курсором (сокращение для "dl")
X       удалить символ перед курсором (сокращение для "dh")
D       удалить текст от курсора до конца строки (сокращение для "d$")
dw      удалить текст от курсора до начала следующего слова
db      удалить текст от курсора до начала предыдущего слова
diw     удалить слово под курсором (исключая пробел)        
daw     удалить слово под курсором (включая пробел)         
dG      удалить до конца файла          
dgg     удалить текст от курсора до начала файла

Если вместо оператора "d" использовать оператор "c", то получатся
соответствующие команды замены, а с оператором "y" будет набор команд для
копирования и вставки текста, и т. д.

Вот ещё несколько команд для изменения текста, о которых мы пока нигде не
упоминали:

        ~       Изменение регистра символа под курсором и переместить курсор к
                следующему символу.  Это не оператор (если только не
                установлен параметр 'tildeop'), поэтому нет возможности
                использовать с тильдой команды перемещения.  Тильда также
                работает и в визуальном режиме --- выполняется измение 
                регистра всех выделенных символов.

        I       Переключение в режим вставки после перемещения курсора к
                первому пробельному символу строки.

        A       Переключение в режим вставки после перемещения курсора в конец
                строки.

==============================================================================

Следующая глава: |usr_05.txt|  Настройка редактора
Авторские права: см. |авторские_права_на_документацию|  

vim:tw=78:ts=8:ft=help:norl:
